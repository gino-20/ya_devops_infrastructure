.prepare_env:
  environment:
    name: k8s-sausage
    url: https://gaydukov-08.k8s.praktikum-services.tech/
  before_script:
    - mkdir -p ~/.kube
    - echo -n "${CONFIG}"|base64 -d>~/.kube/config

stages:
  - build
  - upload
  - deploy

sausage-store-helm-build:
  stage: build
  image: alpine/helm
  script:
    - cd sausage-store-chart/helm-package
    - helm package sausage-store
  artifacts:
    untracked: true

sausage-store-helm-upload:
  stage: upload
  image: alpine/curl
  dependencies:
    - sausage-store-helm-build
  script:
    - cd sausage-store-chart/helm-package
    - find . -maxdepth 1 -iname '*.tgz' -exec curl -u '${NEXUS_USER}:${NEXUS_PASS}'  http://nexus.praktikum-services.ru/repository/08-gaydukov-helm/ --upload-file '{}' \;   

sausage-store-argo-backend-sync:
  stage: deploy
  image: argoproj/argocd:v2.2.3
  extends: .prepare_env
  script:
    argocd --grpc-web --auth-token $ARGO_TOKEN --server argocd.k8s.praktikum-services.tech app set sausage-store-gaydukov -p backend.image.tag=${IMAGE_TAG}
    argocd --grpc-web --auth-token $ARGO_TOKEN --server argocd.k8s.praktikum-services.tech app sync sausage-store-gaydukov

sausage-store-argo-frontend-sync:
  stage: deploy
  image: argoproj/argocd:v2.2.3
  extends: .prepare_env
  script:
    argocd --grpc-web --auth-token $ARGO_TOKEN --server argocd.k8s.praktikum-services.tech app set sausage-store-gaydukov -p backend.image.tag=${IMAGE_TAG}
    argocd --grpc-web --auth-token $ARGO_TOKEN --server argocd.k8s.praktikum-services.tech app sync sausage-store-gaydukov

sausage-store-argo-backend-report-sync:
  stage: deploy
  image: argoproj/argocd:v2.2.3
  extends: .prepare_env
  edcript:
    argocd --grpc-web --auth-token $ARGO_TOKEN --server argocd.k8s.praktikum-services.tech app set sausage-store-gaydukov -p backend-report.image.tag=${IMAGE_TAG}
    argocd --grpc-web --auth-token $ARGO_TOKEN --server argocd.k8s.praktikum-services.tech app sync sausage-store-gaydukov
