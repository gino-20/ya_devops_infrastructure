apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels: 
    app: frontend
spec:
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        name: frontend
        imagePullPolicy: IfNotPresent
        ports:
          - name: frontend
            containerPort: 8080
        volumeMounts:
          - name: frontend-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 2
          failureThreshold: 6
      volumes:
        - name: frontend-config
          configMap:
            name: frontend-config
      imagePullSecrets:
        - name: docker-config-secret
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - frontend

